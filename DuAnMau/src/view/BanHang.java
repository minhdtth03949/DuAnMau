/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;
import Controller.QLBanHang;
import Model.ChiTietHoaDon;
import Model.ChiTietSanPham;
import Model.HoaDon;
import Model.SanPham;
import java.sql.SQLException;
import java.sql.Time;
import java.time.LocalDate;
import java.time.LocalTime;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author asus
 */
public class BanHang extends javax.swing.JFrame {

    /**
     * Creates new form BanHang
     */
    
    QLBanHang qlbh = new QLBanHang();
    int maSP, rowIndexSP, maCTSP, maHD, rowIndexHD, rowIndexCTHD, maCTHD;
    float donGia;

    public BanHang() throws ClassNotFoundException, SQLException {
        initComponents();
        LoadSanPham();
        LoadHoaDon();
    }
    
    public void LoadSanPham() throws ClassNotFoundException, SQLException {
        DefaultTableModel model = new DefaultTableModel();
        model.setRowCount(0);
        model.setColumnCount(5);
        String[] columns = {"Mã SP", "Tên SP", "Đơn Giá", "Ngày Nhập", "Mã NV"};
        model.setColumnIdentifiers(columns);
        for (SanPham sp : qlbh.getAllSanPham()) {
            model.addRow(new Object[]{
                sp.getMaSP(),
                sp.getTenSP(),
                sp.getDonGia(),
                sp.getNgayNhap(),
                sp.getMaNV()
            });
        }
        tblSanPham.setModel(model);
    }

    public void LoadHoaDon() throws ClassNotFoundException, SQLException {
        DefaultTableModel model = new DefaultTableModel();
        model.setRowCount(0);
        model.setColumnCount(5);
        String[] columns = {"Mã HD", "Mã NV", "Trạng Thái", "Ngày Thanh Toán", "Giờ Thanh Toán"};
        model.setColumnIdentifiers(columns);
        for (HoaDon hd : qlbh.getAllHoaDon()) {
            model.addRow(new Object[]{
                hd.getMaHD(),
                hd.getMaNV(),
                hd.getTrangThai() ? "Đã thanh toán" : "Chưa thanh toán",
                hd.getNgayThanhToan(),
                hd.getGioThanhToan()
            });
        }
        tblHoaDon.setModel(model);
    }

    public void LoadChiTietHoaDon(int maHD) throws ClassNotFoundException, SQLException {
        DefaultTableModel model = new DefaultTableModel();
        model.setRowCount(0);
        model.setColumnCount(8);
        String[] columns = {"Mã CTHD", "Mã HD", "Mã KM", "Mã CTSP", "Tên SP", "Đơn Giá", "Giá Áp Dụng KM", "Trạng Thái"};
        model.setColumnIdentifiers(columns);
        for (ChiTietHoaDon cthd : qlbh.getAllChiTietHoaDon(maHD)) {
            model.addRow(new Object[]{
                cthd.getMaCTHD(),
                cthd.getMaHD(),
                cthd.getMaKM(),
                cthd.getMaCTSP(),
                cthd.getTenSP(),
                cthd.getDonGia(),
                cthd.getGiaApDungMaKM(),
                cthd.getTrangThai() ? "Còn hiệu lực" : "Hủy"
            });
        }
        tblHoaDonChiTiet.setModel(model);
    }

    public void LoadChiTietSP(int maSP) throws ClassNotFoundException, SQLException {
        DefaultTableModel model = new DefaultTableModel();
        model.setRowCount(0);
        model.setColumnCount(6);
        String[] columns = {"Mã CTSP", "Mã SP", "Tên SP", "Đơn Giá", "Ngày Nhập", "Hạn SD"};
        model.setColumnIdentifiers(columns);
        for (ChiTietSanPham ctsp : qlbh.getChiTietSanPham(maSP)) {
            model.addRow(new Object[]{
                ctsp.getMaCTSP(),
                ctsp.getMaSP(),
                ctsp.getTenSP(),
                ctsp.getDonGia(),
                ctsp.getNgayNhap(),
                ctsp.getHanSD()
            });
        }
        tblChiTietSanPham.setModel(model);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnXoaSPKhoiHD = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblHoaDonChiTiet = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnXoaHoaDon = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHoaDon = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblChiTietSanPham = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblSanPham = new javax.swing.JTable();
        btnTaoHoaDon = new javax.swing.JButton();
        btnThemSPVaoHD = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnXoaSPKhoiHD.setText("Xóa khỏi Hóa Đơn");

        tblHoaDonChiTiet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(tblHoaDonChiTiet);

        jLabel1.setText("Chi Tiết Hóa Đơn");

        btnXoaHoaDon.setText("Xóa Hóa Đơn");

        tblHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblHoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHoaDonMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblHoaDon);

        tblChiTietSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblChiTietSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblChiTietSanPhamMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tblChiTietSanPham);

        tblSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSanPhamMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblSanPham);

        btnTaoHoaDon.setText("Tạo Hóa Đơn");
        btnTaoHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaoHoaDonActionPerformed(evt);
            }
        });

        btnThemSPVaoHD.setText("Thêm Vào Hóa Đơn");
        btnThemSPVaoHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemSPVaoHDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jScrollPane3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(btnXoaSPKhoiHD, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(btnThemSPVaoHD, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 692, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnTaoHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnXoaHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnTaoHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(btnXoaHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXoaSPKhoiHD, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(btnThemSPVaoHD, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblHoaDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHoaDonMouseClicked
        // TODO add your handling code here:
       rowIndexHD = tblHoaDon.getSelectedRow();
        try {
            if (rowIndexHD < 0 || rowIndexHD >= qlbh.getAllHoaDon().size()) {
                return;
            } else {
                maHD = (int) tblHoaDon.getValueAt(rowIndexHD, 0);
                LoadChiTietHoaDon(maHD);
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(BanHang.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tblHoaDonMouseClicked

    private void tblChiTietSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblChiTietSanPhamMouseClicked
        // TODO add your handling code here:
        rowindexCTSP = tblChiTietSanPham.getSelectedRow();
        try {
            if(rowindexCTSP < 0 || rowindexCTSP >= qlbh.getChiTietSanPham(maSP).size()){
                return;
            } else{
                maCTSP = (int) tblChiTietSanPham.getValueAt(rowindexCTSP, 0);
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(BanHang.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(BanHang.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tblChiTietSanPhamMouseClicked

    private void tblSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSanPhamMouseClicked
        // TODO add your handling code here:
       rowIndexSP = tblSanPham.getSelectedRow();
        try {
            if (rowIndexSP < 0 || rowIndexSP >= qlbh.getAllSanPham().size()) {
                return;
            } else {
                maSP = (int) tblSanPham.getValueAt(rowIndexSP, 0);
                donGia = (float) tblSanPham.getValueAt(rowIndexSP, 2);
                LoadChiTietSP(maSP);
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(BanHang.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tblSanPhamMouseClicked

    private void btnTaoHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaoHoaDonActionPerformed
        HoaDon hd = new HoaDon();
        hd.setMaNV(1); // Giả định MaNV mặc định
        hd.setTrangThai(false); // Chưa thanh toán
        hd.setNgayThanhToan(new java.sql.Date(System.currentTimeMillis()));
        hd.setGioThanhToan((int) (System.currentTimeMillis() % (24 * 60 * 60 * 1000) / (60 * 60 * 1000))); // Giả định giờ
        try {
            if (qlbh.ThemHoaDon(hd)) {
                JOptionPane.showMessageDialog(rootPane, "Thêm hóa đơn thành công");
                LoadHoaDon();
            } else {
                JOptionPane.showMessageDialog(rootPane, "Thêm hóa đơn thất bại");
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(BanHang.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnTaoHoaDonActionPerformed

    private void btnThemSPVaoHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemSPVaoHDActionPerformed
        ChiTietHoaDon cthd = new ChiTietHoaDon();
        cthd.setMaHoaDon(maHD);
        cthd.setMaChiTet(maCTSP);
        cthd.setDonGia(donGia);
        boolean isExist = false;
        try {
            for(ChiTietHoaDon ct : qlbh.getAllChiTietHoaDon(maHD)){
                if(ct.getMaChiTet() == maCTSP){
                    int macthd = ct.getMaChiTietHoaDon();
                    if(qlbh.UpdateChiTietHD(ct.getSoLuong() + 1, macthd)){
                        JOptionPane.showMessageDialog(rootPane,"Thêm thành công");
                    } else {
                        JOptionPane.showMessageDialog(rootPane,"Thêm thất bại");
                    }
                    isExist = true;
                    break;
                }
            }
            if(isExist == false){
                cthd.setSoLuong(1);
                if(qlbh.ThemChiTietHD(cthd)){
                    JOptionPane.showMessageDialog(rootPane,"Thêm thành công");
                } else {
                    JOptionPane.showMessageDialog(rootPane,"Thêm thất bại");
                }
            }
            UpdateTongTien(maHD);
            LoadHoaDon();
            LoadChiTietHoaDon(maHD);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(BanHang.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(BanHang.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnThemSPVaoHDActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BanHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BanHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BanHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BanHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BanHang().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnTaoHoaDon;
    private javax.swing.JButton btnThemSPVaoHD;
    private javax.swing.JButton btnXoaHoaDon;
    private javax.swing.JButton btnXoaSPKhoiHD;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable tblChiTietSanPham;
    private javax.swing.JTable tblHoaDon;
    private javax.swing.JTable tblHoaDonChiTiet;
    private javax.swing.JTable tblSanPham;
    // End of variables declaration//GEN-END:variables
}
